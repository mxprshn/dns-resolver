import org.junit.jupiter.api.Test
import resolver.DnsPacket


class DnsPacketTests {

    @Test
    fun `packet is decoded correctly`() {
        //val packet = "704d7b66432650ff2057bb2a0800450000a9658040004011514ac0a80101c0a801280035f3a700957e06c58b818000010005000000000961647365727669636506676f6f676c650272750000010001c00c0005000100000019001c087061676561643436016c0b646f75626c65636c69636b036e657400c03100010001000000ce000440e9a19bc03100010001000000ce000440e9a19cc03100010001000000ce000440e9a19dc03100010001000000ce000440e9a19a"
        //val packet = "c1798180000100010005000003777777096d756c74697472616e03636f6d0000010001c00c000100010000094d0004596c7046c010000200010000094d000f066e73382d6c32036e696302727500c010000200010000094d0009066e73332d6c32c046c010000200010000094d0009066e73342d6c32c046c010000200010000094d000c096e73382d636c6f7564c046c010000200010000094d000c096e73342d636c6f7564c046"
        val packet = "8a3a010000010000000000000377777711676f6f676c65746167736572766963657303636f6d0000010001"
        val bytes = packet.chunked(2).map { it.toInt(16).toByte() }.toByteArray()
        val decodedPacket = DnsPacket.fromByteArray(bytes)
        val encodedPacket = decodedPacket.bytes
        val decodedAgain = DnsPacket.fromByteArray(encodedPacket)
        assert(true)
    }
}